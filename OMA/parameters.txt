//the file is composed each line by "parameter" "value"
//if value is -1 it's kept at its standard value
//standard values are commented right after
//stadard values are not taken from this file, but they are still required to be present and of the same type (int, double...)
//all variables must be always present and in the given order !!!!!!!
//empty and comment lines are not considered 
// ################################################################################################################################à

TABU_LENGTH -1 // 10
MIN_TABU_LENGTH -1 // 1
MAX_TABU_LENGTH -1 // 10

N_BEST -1 // 100
RANDOMNESS_BEST -1 // 0.1
RANDOMNESS_BEST_MIN -1 // 0.05
RANDOMNESS_BEST_MAX -1 // 0.2
TREND_THRESHOLD_BEST_RANDOM_GROUP -1 // 0.05

N_BEST_SINGLE -1 // 200
RANDOMNESS_BEST_SINGLE -1 // 0.2
RANDOMNESS_BEST_SINGLE_MIN -1 // 0.1
RANDOMNESS_BEST_SINGLE_MAX -1 // 0.5
TREND_THRESHOLD_BEST_RANDOM_SINGLE -1 // 0.1

RANDOMNESS_RANDOMorCHEAP_GROUP -1 // 0.8
RANDOMNESS_RANDOMorCHEAP_GROUP_MIN -1 // 0.7
RANDOMNESS_RANDOMorCHEAP_GROUP_MAX -1 // 0.9
RANDOMNESS_RANDOMorCHEAP_SINGLE -1 // 0.5
RANDOMNESS_RANDOMorCHEAP_SINGLE_MIN 0.2 // 0.5
RANDOMNESS_RANDOMorCHEAP_SINGLE_MAX 0.7 // 0.9

ALFA -1 // 0.3
BETA -1 // 0.4
ITERATION -1 // 100
ITERATION_THRESHOLD -1 // 5000

IT_GROUP_BEST_RANDOM 50 // 100
IT_SINGLE_BEST_RANDOM 100 // 100
IT_GROUP_RANDOM -1 // 100
IT_SINGLE_RANDOM -1 // 100

NO_IMPR_DECREASE -1 // 100
DESTROY_THRESHOLD 200 // 500
DESTROY_GROUP -1 // 500
DESTROY_SINGLE -1 // 500
N_TIMESLOT -1 // 3

TEMP_PAR -1 // 0.995

DIST_PAR -1 // 0.9
SINGLE_DIST -1 // 0
GROUP_DIST -1 // 1
ITERATIONS_DIST -1 // 1000

DYNAMIC_PARAMETERS -1 // 1
DYNAMIC_TABULIST -1 // 1
TABULIST_INCREASING -1 // 1
DYNAMIC_RANDOMNESS_SINGLE -1 // 0
RANDOMNESS_SINGLE_INCREASING -1 // 0
DYNAMIC_RANDOMNESS_GROUP -1 // 0
RANDOMNESS_GROUP_INCREASING -1 // 0
DYNAMIC_RANDOMorCHEAP_SINGLE -1 // 1
RANDOMorCHEAP_SINGLE_INCREASING -1 // 0
DYNAMIC_RANDOMorCHEAP_GROUP -1 // 1
RANDOMorCHEAP_GROUP_INCREASING -1 // 0

DESTROY_CURRENTorBEST -1 // 1
DESTROY_BESTFIRSTorRANDOM -1 // 0
//#####################################################################################################################
// SPIEGAZIONE DEI PARAMETRI 
//
//@TABU_LENGTH: lunghezza di default per la tabu length (utile se non la si fa cambiare durante l'esecuzione)
//@MIN_TABU_LENGTH: minima lunghezza per la tabu length (se scegliete di farlo variare dinamicamente)
//@MAX_TABU_LENGTH: massima lunghezza per la tabu length (se scegliete di farlo variare dinamicamente)
//
//N_BEST -1: numero di scambi di timeslot migliori che si prendono in considerazione (quando scelgo random tra i migliori scambi singoli)
//@RANDOMNESS_BEST: [0,1] probabilità di scegliere i migliori rispetto agli altri (utile se non la si fa cambiare durante l'esecuzione)
////@RANDOMNESS_BEST_MIN: valore minimo (se scegliete di farlo variare dinamicamente)
//@RANDOMNESS_BEST_MAX: valore massimo (se scegliete di farlo variare dinamicamente)
//TREND_THRESHOLD_BEST_RANDOM_GROUP: !!!NON USATO!!! al momento (potremmo usarlo per smettere di scambiare gruppi quando non stiamo migliorando)
//
//N_BEST_SINGLE -1: numero di scambi esami migliori che si prendono in considerazione (quando scelgo random tra i migliori scambi singoli)
//@RANDOMNESS_BEST_SINGLE: [0,1] probabilità di scegliere i migliori rispetto agli altri (utile se non la si fa cambiare durante l'esecuzione)
//@RANDOMNESS_BEST_MIN_SINGLE: valore minimo (se scegliete di farlo variare dinamicamente)
//@RANDOMNESS_BEST_MAX_SINGLE: valore massimo (se scegliete di farlo variare dinamicamente)
//TREND_THRESHOLD_BEST_RANDOM_GROUP_SINGLE: !!!NON USATO!!! al momento (potremmo usarlo per smettere di scambiare esami quando non stiamo migliorando)
//
//@RANDOMNESS_RANDOMorCHEAP_GROUP: [0,1] probabilità di scambiare gruppi scegliendo tra i migliori (altrimenti usa una funzione che cerca sempre i migliori ma in modo più random, e più economico) (utile se non la si fa cambiare durante l'esecuzione)
//@RANDOMNESS_RANDOMorCHEAP_GROUP_MIN -1: valore minimo (se scegliete di farlo variare dinamicamente)
//@RANDOMNESS_RANDOMorCHEAP_GROUP_MAX -1: valore massimo (se scegliete di farlo variare dinamicamente)
//@RANDOMNESS_RANDOMorCHEAP_SINGLE: [0,1] probabilità di scambiare esami scegliendo tra i migliori (altrimenti usa una funzione che cerca sempre i migliori ma in modo più random, e più economico) (utile se non la si fa cambiare durante l'esecuzione)
//@RANDOMNESS_RANDOMorCHEAP_SINGLE_MIN: valore minimo (se scegliete di farlo variare dinamicamente)
//@RANDOMNESS_RANDOMorCHEAP_SINGLE_MAX: valore massimo (se scegliete di farlo variare dinamicamente)
//
//ALFA: alfa per trendMatematici
//BETA: beta per trendMatematici
//ITERATION: numero di valori usati per calcolare trendMatematici all'inizio
//ITERATION_THRESHOLD: !!!NON USATO!!! 
//
//@IT_GROUP_BEST_RANDOM: numero di iterazioni minime prima di smettere di fare scambi di gruppo
//@IT_SINGLE_BEST_RANDOM: numero di iterazioni minime prima di smettere di fare scambi di gruppo
//IT_GROUP_RANDOM: !!!NON USATO!!!
//IT_SINGLE_RANDOM: !!!NON USATO!!!
//
//@NO_IMPR_DECREASE: ATTUALMENTE USATA PER VARIARE I PARAMETRI DINAMICAMENTE, quando miglioro la soluzione, decremento il no_improvement_decrease (numero di volte in cui passo da scambiare esami singoli a scambiare timeslot senza migliorare la soluzione migliore) di NO_IMP_DECREASE (più è alto, più ritardo la distruzione)
//@DESTROY_THRESHOLD: massimo , prima di distruggere la soluzione
//DESTROY_GROUP: !!!NON USATO!!!
//DESTROY_SINGLE: !!!NON USATO!!!
//N_TIMESLOT: !!!NON USATO!!! (era il numero di timeslot che "mischio" quando distruggo la soluzione, ma ora uso una funzione diversa)
//
//TEMP_PAR: temperature = TEMP_PAR * temperature + (1 - TEMP_PAR) * (1000000 * improvements_number / iteration_counter * (double) (fabs(pen - old_pen)) / pen)
//
//DIST_PAR: delta_dist = DIST_PAR * delta_dist + (1 - DIST_PAR) * fabs(dist - old_dist);
//SINGLE_DIST: "peso" che do al fatto che un esame si trovi in un timeslot diverso quando calcolo la distanza
//GROUP_DIST: "peso" che do al fatto che un esame si trovi insieme ad esami che prima non erano nello stesso timeslot 
//ITERATIONS_DIST: numero di iterazioni che aspetto prima di ricalcolare la distanza (ogni ITERATION_DIST iterazioni, misuro la distanza tra la soluzione attuale e la soluzione di ITERATION_DIST iterazioni fa e aggiorno dist e delta_dist)
//
//@DYNAMIC_PARAMETERS: DECIDE SE I PARAMETRI VARIANO DURANTE L'ESECUZIONE O RIMANGONO COSTANTI (per ora variano tutti in modo lineare al variare di no_improvements)
//DYNAMIC_TABULIST: se uguale ad uno, la lunghezza della tabulist varia
//TABULIST_INCREASING: se uguale ad uno, cresce al crescere di no_improvements, altrimenti decresce
//DYNAMIC_RANDOMNESS_SINGLE: se uguale ad uno, RANDOMNESS_BEST varia
//RANDOMNESS_SINGLE_INCREASING: se uguale ad uno, cresce al crescere di no_improvements, altrimenti decresce
//DYNAMIC_RANDOMNESS_GROUP: decide se la RANDOMNESS_BEST_GROUP varia
//RANDOMNESS_GROUP_INCREASING: se uguale ad uno, cresce al crescere di no_improvements, altrimenti decresce
//DYNAMIC_RANDOMorCHEAP_SINGLE: decide se RANDOMNESS_RANDOMorCHEAP_SINGLE varia
//RANDOMorCHEAP_SINGLE_INCREASING: se uguale ad uno, cresce al crescere di no_improvements, altrimenti decresce
//DYNAMIC_RANDOMorCHEAP_GROUP: decide se la RANDOMNESS_RANDOMorCHEAP_group varia
//RANDOMorCHEAP_GROUP_INCREASING: se uguale ad uno, cresce al crescere di no_improvements, altrimenti decresce
//
//DESTROY_CURRENTorBEST: se uno, distrugge partendo dalla soluzione corrente , altrimenti parte dalla soluzione migliore trovata partendo dall'ultima distruzione
//DESTROY_BESTFIRSTorRANDOM: se uno, distrugge facendo solo scambi che "allontanano" dalla soluzione usata per la distruzione, altrimenti fa tanti scambi random